#Imports
import argparse, pyfiglet, hashlib

#Functions that handle MD5 hashes
def md5(testHash, inputFile):
    md5 = hashlib.md5()

    with open(inputFile, 'rb') as file:
        for line in file:
            data = line.read()

            md5.update(data)

        # md5.hexdigest
        hexHash= md5.hexdigest()

        if hexHash == testHash:
            print(f"Password Found: {testHash} = {line}")

#Functions that handle SHA1 hashes
def sha1(testHash, inputFile):
    sha1 = hashlib.sha1()

    with open(inputFile, 'rb') as file:
        for line in file:
            data = line.read()
            sha1.update(data)

        # sha1.hexdigest
        hexHash= sha1.hexdigest()

        if hexHash == testHash:
            print(f"Password Found: {testHash} = {line}")

#Functions that handle SHA256 hashes
def sha256(testHash, inputFile):
    sha256 = hashlib.sha256()

    with open(inputFile, 'rb') as file:
        for line in file:
            data = line.read()
            sha256.update(data)

        # sha256.hexdigest
        hexHash= sha256.hexdigest()

        if hexHash == testHash:
            print(f"Password Found: {testHash} = {line}")
            

#Creates and Displays ASCII Title
title = pyfiglet.figlet_format("HashSmack", font = "doom") 
print(title)

#ArgumentParser object
parser = argparse.ArgumentParser(description='A basic hash cracking tool')

# Define arguments
parser.add_argument('-m', '--md5', default= 'none', help='MD5 Hashing Algorithm', required=False)
parser.add_argument('-s', '--sha1', default= 'none', help='SHA1 Hashing Algorithm', required=False)
parser.add_argument('-S', '--sha256', default='none', help='SHA256 Hashing Algorithm', required=False)
parser.add_argument('-s5', '--sha512', default= 'none', help='SHA512 Hashing Algorithm', required=False)
parser.add_argument('-w', '--wordlist', default= 'none', help='Wordlist/Input File', required=True)


# Parse arguments
args = parser.parse_args()

#Identifies wordlist and saves it to a variable
wordlist = args.wordlist

if not args.md5 == None:
    md5(hash, wordlist)
elif not args.sha1 == None:
    sha1(hash, wordlist)
elif not args.sha256 == None:
    sha256(hash, wordlist)

else:
    print("You Did Not Provide Proper Input. Please Check Settigns And Try Again.")
